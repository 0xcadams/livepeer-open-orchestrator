---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "7935"
spec:
  replicas: {{ .Values.orchestrator.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "livepeer/go-livepeer:{{ .Values.orchestrator.version }}"
          args:
            - -v=6
            - -network=$(NETWORK)
            - -orchestrator=true
            - -transcoder=true
            - -monitor=true
            - -cliAddr=0.0.0.0:7935
            - -httpAddr=0.0.0.0:8935
            - -serviceAddr=$(SERVICE_ADDR)
            - -maxSessions=$(MAX_SESSIONS)
            - -nvidia=$(NVIDIA)
            - -ethUrl=$(ETH_URL)
            - -reward=$(REWARD)
            - -ethPassword=$(ETH_PASSWORD)
            - -ethOrchAddr=$(ETH_ORCH_ADDR)
            - -pricePerUnit=$(PRICE_PER_UNIT)
            - -blockPollingInterval=$(BLOCK_POLLING_INTERVAL)
          env:
            - name: ETH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: json-private-key-password
                  key: json-private-key-password
            - name: ETH_ORCH_ADDR
              value: "{{ .Values.orchestrator.ethAddress }}"
            - name: NETWORK
              value: "{{ .Values.orchestrator.network }}"
            - name: PRICE_PER_UNIT
              value: "{{ .Values.orchestrator.pricePerUnit }}"
            - name: ETH_URL
              value: "http://arbitrum-nginx-failover:8555"
            - name: REWARD
              value: "false"
            - name: NVIDIA
              value: "all"
            - name: MAX_SESSIONS
              value: "8"
            - name: BLOCK_POLLING_INTERVAL
              value: "{{ .Values.orchestrator.blockPollingInterval }}"
            - name: SERVICE_ADDR
              value: "{{ .Values.domain }}:8935"
          ports:
            - name: https
              containerPort: 8935
            - name: cli
              containerPort: 7935
          resources:
            requests:
              memory: '1Gi'
              cpu: '1000m'
            limits:
              memory: '4Gi'
              cpu: '2000m'
              nvidia.com/gpu: 1
          readinessProbe:
            httpGet:
              path: /status
              port: cli
          livenessProbe:
            httpGet:
              path: /status
              port: cli
          startupProbe:
            httpGet:
              path: /status
              port: cli
          volumeMounts:
            - name: lp-data
              mountPath: /root/.lpData
            - name: json-private-key
              mountPath: "/root/.lpData/{{ .Values.orchestrator.network }}/keystore/wallet"
              subPath: "wallet.secret"
              readOnly: true
      volumes:
        - name: json-private-key
          secret:
            secretName: json-private-key
        - name: lp-data
          emptyDir:
            medium: Memory
