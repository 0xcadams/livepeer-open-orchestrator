{{ if .Values.global.isPrimaryCluster }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    app: "{{ .Chart.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: alpha.eksctl.io/nodegroup-name
                    operator: In
                    values:
                      - large-5
      securityContext:
        fsGroup: 2000
      initContainers:
        - name: wait-for-geth
          image: curlimages/curl:latest
          command: ["/bin/sh","-c"]
          args: ["while [ $(curl -sw '%{http_code}' http://geth:8545 -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting...'; done"]
      containers:
        - name: "{{ .Chart.Name }}"
          image: "offchainlabs/arb-node:{{ .Values.arbitrum.version }}"
          args: ["--l1.url=http://geth:8545"]
          ports:
            - name: rpc
              containerPort: 8547
            - name: ws
              containerPort: 8548
            - name: seq
              containerPort: 9642
          resources:
            requests:
              memory: 7G
              cpu: '3500m'
            limits:
              memory: 15G
              cpu: '6000m'
          volumeMounts:
            - name: arb-datadir
              mountPath: /home/user/.arbitrum/mainnet
  serviceName: "{{ .Chart.Name }}"
  podManagementPolicy: Parallel
  volumeClaimTemplates:
    - metadata:
        name: arb-datadir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 800Gi
{{ end }}
